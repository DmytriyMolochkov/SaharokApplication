<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="fileicon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AX7OB6etN0zaAAAAAElFTkSuQmCC
</value>
  </data>
</root>